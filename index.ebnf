@@grammar :: Swift57
@@comments :: /\(\*((?:.|\n)*?)\*\)/

unicode_scalar_value = /[\U00000000-\U0000D7FF]/ | /[\U0000E000-\U0010FFFF]/ ;
keyword = "associatedtype" | "class" | "deinit" | "enum" | "extension" | "fileprivate" | "func" | "import" | "init" | "inout" | "internal" | "let" | "open" | "operator" | "private" | "precedencegroup" | "protocol" | "public" | "rethrows" | "static" | "struct" | "subscript" | "typealias" | "var" | "break" | "case" | "catch" | "continue" | "default" | "defer" | "do" | "else" | "fallthrough" | "for" | "guard" | "if" | "in" | "repeat" | "return" | "throw" | "switch" | "where" | "while" | "Any" | "as" | "catch" | "false" | "is" | "nil" | "rethrows" | "self" | "Self" | "super" | "throw" | "throws" | "true" | "try" | "associativity" | "convenience" | "didSet" | "dynamic" | "final" | "get" | "indirect" | "infix" | "lazy" | "left" | "mutating" | "none" | "nonmutating" | "optional" | "override" | "postfix" | "precedence" | "prefix" | "Protocol" | "required" | "right" | "set" | "some" | "Type" | "unowned" | "weak" | "willSet" | "#available" | "#colorLiteral" | "#column" | "#dsohandle" | "#elseif" | "#else" | "#endif" | "#error" | "#fileID" | "#fileLiteral" | "#filePath" | "#file" | "#function" | "#if" | "#imageLiteral" | "#keyPath" | "#line" | "#selector" | "#sourceLocation" | "#warning" ;

#include :: "lexical-structure/_index.ebnf"
#include :: "types/_index.ebnf"
#include :: "expressions/_index.ebnf"
#include :: "statements/_index.ebnf"
#include :: "declarations/_index.ebnf"
#include :: "attributes/_index.ebnf"
#include :: "patterns/_index.ebnf"
#include :: "generic-parameters-and-arguments/_index.ebnf"
